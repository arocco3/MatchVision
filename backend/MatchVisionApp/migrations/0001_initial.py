# Generated by Django 5.2.5 on 2025-08-10 06:07

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('TimeOut tecnico', 'Technical Timeout'), ('Cambio', 'Change'), ('Doppio cambio', 'Double Change'), ('Cambio medico', 'Medical Change'), ('Cartellino giallo', 'Yellow Card'), ('Cartellino rosso', 'Red Card'), ('Punto generico eseguito', 'Scored Point'), ('Punto generico subito', 'Conceded Point'), ('Palla contesa', 'Double Fault')], max_length=30, verbose_name='Tipo evento')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventi',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome partita')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('results', models.JSONField(blank=True, default=list)),
            ],
            options={
                'verbose_name': 'Partita',
                'verbose_name_plural': 'Partite',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome')),
                ('surname', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cognome')),
                ('number', models.PositiveIntegerField(blank=True, db_index=True, null=True, verbose_name='Numero')),
                ('role', models.CharField(blank=True, choices=[('Alzatore', 'Setter'), ('Lato', 'Outside Hitter'), ('Centrale', 'Middle Blocker'), ('Opposto', 'Opposite Hitter'), ('Libero', 'Libero')], max_length=20, null=True, verbose_name='Ruolo')),
            ],
            options={
                'verbose_name': 'Giocatore',
                'verbose_name_plural': 'Giocatori',
                'ordering': ['surname', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(verbose_name='Numero set')),
                ('home_score', models.PositiveIntegerField(default=0, verbose_name='Punteggio casa')),
                ('guest_score', models.PositiveIntegerField(default=0, verbose_name='Punteggio ospite')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sets', to='MatchVisionApp.match')),
                ('players', models.ManyToManyField(blank=True, related_name='sets', to='MatchVisionApp.player')),
            ],
            options={
                'verbose_name': 'Set',
                'verbose_name_plural': 'Set',
                'ordering': ['match', 'number'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome squadra')),
                ('players', models.ManyToManyField(blank=True, related_name='teams', to='MatchVisionApp.player')),
            ],
            options={
                'verbose_name': 'Squadra',
                'verbose_name_plural': 'Squadre',
            },
        ),
        migrations.AddField(
            model_name='match',
            name='teams',
            field=models.ManyToManyField(related_name='matches', to='MatchVisionApp.team'),
        ),
        migrations.CreateModel(
            name='Touch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fundamental', models.CharField(choices=[('Servizio', 'Serve'), ('Ricezione', 'Serve Receive'), ('Alzata', 'Set'), ('Attacco', 'Attack'), ('Muro', 'Block'), ('Difesa', 'Defense')], max_length=15, verbose_name='Fondamentale')),
                ('outcome', models.CharField(choices=[('++', 'Positiva'), ('+', 'Buona'), ('/', 'Neutra'), ('-', 'Negativa'), ('--', 'Errore')], max_length=5, verbose_name='Esito')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='touches', to='MatchVisionApp.player')),
                ('set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='touches', to='MatchVisionApp.set')),
            ],
            options={
                'verbose_name': 'Tocco',
                'verbose_name_plural': 'Tocchi',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('matches', models.ManyToManyField(related_name='users', to='MatchVisionApp.match')),
                ('players', models.ManyToManyField(related_name='users', to='MatchVisionApp.player')),
                ('teams', models.ManyToManyField(related_name='users', to='MatchVisionApp.team')),
            ],
        ),
    ]
